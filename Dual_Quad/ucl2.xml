<!--
* Copyright (C) 2012, Freescale Semiconductor, Inc. All Rights Reserved.
* The CFG element contains a list of recognized usb devices.
*  DEV elements provide a name, class, vid and pid for each device.
*
* Each LIST element contains a list of update instructions.
*  "Install" - Erase media and install firmware.
*  "Update" - Update firmware only.
*
* Each CMD element contains one update instruction of attribute type.
*  "pull" - Does UtpRead(body, file) transaction.
*  "push" - Does UtpWrite(body, file) transaction.
*  "drop" - Does UtpCommand(body) then waits for device to disconnect.
*  "boot" - Finds configured device, forces it to "body" device and downloads "file".
*  "find" - Waits for "timeout" seconds for the "body" device to connect.
*  "show" - Parse and show device info in "file".  
-->


<UCL>
  <CFG>
    <STATE name="BootStrap" dev="MX6Q" vid="15A2" pid="0054"/>
	<STATE name="Updater"   dev="MSC" vid="066F" pid="37FF"/> 
  </CFG>

<LIST name="Linux-AR6MXQ-SD" desc="Choose SD as media">  
    <CMD state="BootStrap" type="boot" body="BootStrap" file ="u-boot.bin.ar6mxq.mfg2014-01-10" >Loading U-boot</CMD>
    <CMD state="BootStrap" type="load" file="uImage.ar6mx.mfg2014-01-10" address="0x10800000"
        loadSection="OTH" setSection="OTH" HasFlashHeader="FALSE" >Loading Kernel.</CMD>
    <CMD state="BootStrap" type="load" file="initramfs.cpio.gz.uboot" address="0x10C00000"
        loadSection="OTH" setSection="OTH" HasFlashHeader="FALSE" >Loading Initramfs.</CMD>
    <CMD state="BootStrap" type="jump" > Jumping to OS image. </CMD>

    <CMD state="Updater" type="push" body="send" file="mksdcard.sh.tar">Sending partition shell</CMD>
    <CMD state="Updater" type="push" body="$ tar xf $FILE "> Partitioning...</CMD>
    <CMD state="Updater" type="push" body="$ sh mksdcard.sh /dev/mmcblk1"> Partitioning...</CMD>
    <CMD state="Updater" type="push" body="send" file="files/u-boot.bin.ar6mxq.linux2014-01-10">Sending u-boot.bin</CMD>
    <CMD state="Updater" type="push" body="$ dd if=$FILE of=/dev/mmcblk1 bs=1k seek=1 skip=1 conv=fsync">write u-boot.bin to sd card</CMD>
    <CMD state="Updater" type="push" body="send" file="files/uImage.ar6mx.linux2014-01-10">Sending kernel uImage</CMD>
    <CMD state="Updater" type="push" body="$ dd if=$FILE of=/dev/mmcblk1 bs=1M seek=1 conv=fsync">write kernel image to sd card</CMD>
    <CMD state="Updater" type="push" body="$ mkfs.ext3 -j /dev/mmcblk1p1">Formatting rootfs partition</CMD>
    <CMD state="Updater" type="push" body="$ mkdir -p /mnt/mmcblk1p1"/> 
    <CMD state="Updater" type="push" body="$ mount -t ext3 /dev/mmcblk1p1 /mnt/mmcblk1p1"/>
    <CMD state="Updater" type="push" body="pipe tar -jxv -C /mnt/mmcblk1p1" file="files/rootfs.tar.bz2">Sending and writting rootfs</CMD>
    <CMD state="Updater" type="push" body="frf">Finishing rootfs write</CMD>
    <CMD state="Updater" type="push" body="$ umount /mnt/mmcblk1p1">Unmounting rootfs partition</CMD>
    <CMD state="Updater" type="push" body="$ echo Update Complete!">Done</CMD>
 <!--
    The below commands will trigger reboot
    <CMD type="push" body="!3">Done</CMD>
 -->
</LIST>

<LIST name="Android-AR6MXQ-SD" desc="Choose SD android as media">
    <CMD state="BootStrap" type="find" body="Recovery" timeout="180"/>
  <CMD state="BootStrap" type="boot" body="Recovery" file ="u-boot.bin.ar6mxq.mfg2014-01-10" >Loading U-boot</CMD>
  <CMD state="BootStrap" type="load" file="uImage.ar6mx.mfg2014-01-10" address="0x10800000"
        loadSection="OTH" setSection="OTH" HasFlashHeader="FALSE" >Loading Kernel.</CMD>
    <CMD state="BootStrap" type="load" file="initramfs.cpio.gz.uboot" address="0x10C00000"
        loadSection="OTH" setSection="OTH" HasFlashHeader="FALSE" >Loading Initramfs.</CMD>
    <CMD state="BootStrap" type="jump" > Jumping to OS image. </CMD>

  <CMD state="Updater" type="push" body="$ dd if=/dev/zero of=/dev/mmcblk1 bs=512 seek=1536 count=16">clean up u-boot parameter</CMD>
  <!--
  <CMD state="Updater" type="push" body="$ echo 1 > /sys/devices/platform/sdhci-esdhc-imx.2/mmc_host/mmc0/mmc0:0001/boot_config">access boot partition 1</CMD>
  -->
    <CMD state="Updater" type="push" body="send" file="files/android/u-boot.bin.ar6mxq.android2014-01-10">Sending U-Boot</CMD>
  <CMD state="Updater" type="push" body="$ dd if=$FILE of=/dev/mmcblk1 bs=512 seek=2 skip=2">write U-Boot to sd card</CMD>
  <!--
  <CMD state="Updater" type="push" body="$ echo 8 > /sys/devices/platform/sdhci-esdhc-imx.2/mmc_host/mmc0/mmc0:0001/boot_config">access user partition and enable boot partion 1 to boot</CMD>
  -->
  <CMD state="Updater" type="push" body="send" file="mksdcard-android.sh.tar">Sending partition shell</CMD>
  <CMD state="Updater" type="push" body="$ tar xf $FILE "> Partitioning...</CMD>
  <CMD state="Updater" type="push" body="$ sh mksdcard-android.sh /dev/mmcblk1"> Partitioning...</CMD>

  <CMD state="Updater" type="push" body="$ ls -l /dev/mmc* ">Formatting sd partition</CMD>

  <CMD state="Updater" type="push" body="send" file="files/android/boot.img.sd">Sending kernel uImage</CMD>
  <CMD state="Updater" type="push" body="$ dd if=$FILE of=/dev/mmcblk1p1">write boot.img</CMD>
  <CMD state="Updater" type="push" body="frf">flush the memory.</CMD>

  <CMD state="Updater" type="push" body="$ mkfs.ext4 -b 4096 -m 0 /dev/mmcblk1p4">Formatting data partition</CMD>
  <CMD state="Updater" type="push" body="send" file="mk-encryptable-data-android.sh.tar">Sending data partition shell</CMD>
  <CMD state="Updater" type="push" body="$ tar xf $FILE ">Extracting data partition shell</CMD>
  <CMD state="Updater" type="push" body="$ sh mk-encryptable-data-android.sh /dev/mmcblk1 /dev/mmcblk1p4">Making data encryptable</CMD>

  <CMD state="Updater" type="push" body="$ mkfs.ext4 /dev/mmcblk1p5">Formatting system partition</CMD>
  <CMD state="Updater" type="push" body="$ mkfs.ext4 /dev/mmcblk1p6">Formatting cache partition</CMD>
  <CMD state="Updater" type="push" body="frf">flush the memory.</CMD>
  <CMD state="Updater" type="push" body="$ mkfs.ext4 /dev/mmcblk1p7">Formatting device partition</CMD>
  <CMD state="Updater" type="push" body="pipe dd of=/dev/mmcblk1p5 bs=512" file="files/android/system.img.sd">Sending and writting system.img</CMD>
  <CMD state="Updater" type="push" body="frf">flush the memory.</CMD>
  <!-- Write userdata.img is optional, for some customer this is needed, but it's optional. -->
  <!-- Also, userdata.img will have android unit test, you can use this to do some auto test. -->
  <CMD state="Updater" type="push" onError="ignore" body="pipe dd of=/dev/mmcblk1p4" file="files/android/userdata.img.sd"> Sending userdata.img(optional) </CMD>
  <CMD state="Updater" type="push" body="frf">flush the memory.</CMD>
  <CMD state="Updater" type="push" body="pipe dd of=/dev/mmcblk1p2 bs=512" file="files/android/recovery.img.sd">Sending and writting recovery.img</CMD>

  <CMD state="Updater" type="push" body="frf">Finishing rootfs write</CMD>

  <CMD state="Updater" type="push" body="$ echo Update Complete!">Done</CMD>
</LIST>

<LIST name="Android-AR6MXQ-eMMC" desc="Choose eMMC android as media">
    <CMD state="BootStrap" type="find" body="Recovery" timeout="180"/>
  <CMD state="BootStrap" type="boot" body="Recovery" file ="u-boot.bin.ar6mxq.mfg2014-01-10" >Loading U-boot</CMD>
  <CMD state="BootStrap" type="load" file="uImage.ar6mx.mfg2014-01-10" address="0x10800000"
        loadSection="OTH" setSection="OTH" HasFlashHeader="FALSE" >Loading Kernel.</CMD>
    <CMD state="BootStrap" type="load" file="initramfs.cpio.gz.uboot" address="0x10C00000"
        loadSection="OTH" setSection="OTH" HasFlashHeader="FALSE" >Loading Initramfs.</CMD>
    <CMD state="BootStrap" type="jump" > Jumping to OS image. </CMD>

  <CMD state="Updater" type="push" body="$ dd if=/dev/zero of=/dev/mmcblk0 bs=512 seek=1536 count=16">clean up u-boot parameter</CMD>
  
  <CMD state="Updater" type="push" body="$ echo 1 > /sys/devices/platform/sdhci-esdhc-imx.3/mmc_host/mmc0/mmc0:0001/boot_config">access boot partition 1</CMD>
  
    <CMD state="Updater" type="push" body="send" file="files/android/u-boot.bin.ar6mxqf.android2014-01-10">Sending U-Boot</CMD>
  <CMD state="Updater" type="push" body="$ dd if=$FILE of=/dev/mmcblk0 bs=512 seek=2 skip=2">write U-Boot to sd card</CMD>
  
  <CMD state="Updater" type="push" body="$ echo 8 > /sys/devices/platform/sdhci-esdhc-imx.3/mmc_host/mmc0/mmc0:0001/boot_config">access user partition and enable boot partion 1 to boot</CMD>
  
  <CMD state="Updater" type="push" body="send" file="mksdcard-android.sh.tar">Sending partition shell</CMD>
  <CMD state="Updater" type="push" body="$ tar xf $FILE "> Partitioning...</CMD>
  <CMD state="Updater" type="push" body="$ sh mksdcard-android.sh /dev/mmcblk0"> Partitioning...</CMD>

  <CMD state="Updater" type="push" body="$ ls -l /dev/mmc* ">Formatting sd partition</CMD>

  <CMD state="Updater" type="push" body="send" file="files/android/boot.img.sd">Sending kernel uImage</CMD>
  <CMD state="Updater" type="push" body="$ dd if=$FILE of=/dev/mmcblk0p1">write boot.img</CMD>
  <CMD state="Updater" type="push" body="frf">flush the memory.</CMD>

  <CMD state="Updater" type="push" body="$ mkfs.ext4 -b 4096 -m 0 /dev/mmcblk0p4">Formatting data partition</CMD>
  <CMD state="Updater" type="push" body="send" file="mk-encryptable-data-android.sh.tar">Sending data partition shell</CMD>
  <CMD state="Updater" type="push" body="$ tar xf $FILE ">Extracting data partition shell</CMD>
  <CMD state="Updater" type="push" body="$ sh mk-encryptable-data-android.sh /dev/mmcblk0 /dev/mmcblk0p4">Making data encryptable</CMD>

  <CMD state="Updater" type="push" body="$ mkfs.ext4 /dev/mmcblk0p5">Formatting system partition</CMD>
  <CMD state="Updater" type="push" body="$ mkfs.ext4 /dev/mmcblk0p6">Formatting cache partition</CMD>
  <CMD state="Updater" type="push" body="frf">flush the memory.</CMD>
  <CMD state="Updater" type="push" body="$ mkfs.ext4 /dev/mmcblk0p7">Formatting device partition</CMD>
  <CMD state="Updater" type="push" body="pipe dd of=/dev/mmcblk0p5 bs=512" file="files/android/system.img.sd">Sending and writting system.img</CMD>
  <CMD state="Updater" type="push" body="frf">flush the memory.</CMD>
  <!-- Write userdata.img is optional, for some customer this is needed, but it's optional. -->
  <!-- Also, userdata.img will have android unit test, you can use this to do some auto test. -->
  <CMD state="Updater" type="push" onError="ignore" body="pipe dd of=/dev/mmcblk0p4" file="files/android/userdata.img.sd"> Sending userdata.img(optional) </CMD>
  <CMD state="Updater" type="push" body="frf">flush the memory.</CMD>
  <CMD state="Updater" type="push" body="pipe dd of=/dev/mmcblk0p2 bs=512" file="files/android/recovery.img.sd">Sending and writting recovery.img</CMD>

  <CMD state="Updater" type="push" body="frf">Finishing rootfs write</CMD>

  <CMD state="Updater" type="push" body="$ echo Update Complete!">Done</CMD>
</LIST>

</UCL>
